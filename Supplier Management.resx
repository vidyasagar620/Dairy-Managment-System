<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AFDCAACoZQBQwgAAqGUAUMIAAKhlAFDCAACoZQBQwgAAqGUAUMIAAKhlAFDCAACoZQBQwgAAqGUAUMIA
        AKhlAFDCAACoZQBQwgAAqGUAUMIAAKhlAFDCAACoZQBQwgAAqGUAUMIAAKhlAFDCAACoZQBQwgAAqGUA
        UMIAAKhlAFDCAACoZQBQwgAAqGUAUMIAAKhlAFDCAACoZQBQwgAAqGUAUMIAAKhlAFDCAACoZQBQwgAA
        qGUAUMIAAKhlAFDCAACoZQBQwgAAqGUAUMIAAKhlAFDCAACoZQBQwgAAqGUAUMIAAKhlAFDCAACoZQBQ
        wgAAqGUAUMIAAKhlAFDCAACoZQBQwgAAqGUAUMIAAKhlAFDCAACoZQBQwgAAqGUAUMIAAKhlAFDCAACo
        ZQBQwgAAqGUAUMIAAKhlAFDCAACoZQBQwgAAqGUAUMIAAKhlAFDCAACoZQBQwgAAqGUAUMIAAKhlAFDC
        AACoZQBQwgAAqGUAUMIAAKhlAFDCAACoZQBQwgAAqGUAUMIAAKhlAFDCAACoZQBQwgAAqGUAUMIAAKhl
        AFDi5Wj0Q58hAwBYwcwDID8jaOrX0eiHPkNfjgC6y7NudAbOUH5G0NQvotEPfYa+GQF0l2fd6AycofyM
        oKnnotEPfYZ+EAF0l2fd6AycofyMoKlnotEPfYaejwC6y7NudAbOUH5G0NST0eiHPkN/iO6IALrKMy7P
        utEZOEP5GUFT345GP/RZ+ngE0FWecaOzb5byM4KmvhqNfuiz9HgE0FWecaOzb5byM4Km7otGP/RZeiV6
        awTQTZ5tecaNzr5Zys8ImvpgNPqhz9QXI4Bu8mwbnXkzlZ8RNJX/AGX0Q5+pV6O7IoAu8kzLs2105s2U
        f4jd3EvR6Ac/U49GAF3kmTY662YqPxto7tlo9MOfrXsjgL3Ls2x0xs1WfjbQ3Oy/CXBR/nHZ+yOAvcoz
        bA9/9J/5DYAF3B2Nfvgz9qvozghgb/LsyjNsdLbNWH420Nzbopm/ier6Xoj+NgLYizyz8uwanWkzlp8J
        +dnAAn4UjV4Es5a/O3tPBDC7PKtm/33/68vPBBbxlWj0Ipi5XKgPR++MAGaTZ1OeUXv6E9aL8jOBRXw4
        Gr0I9tBvo89HvjEQmEGeRXkm5dk0OrP2UH4msIjbohej0QthL+XvrD4WfSR6SwRwLnnm5NmTZ9Aevlvl
        ZuVnQX4msJC9/DrgZcpfs8l7rL8V5X/Xp6NPSNKRyjMlz5Y8Y/Ks2cuv9l0mv/63oPdFoxeDJGmd8rOA
        Bf0kGr0gJEn9y88AFvVANHpRSJL6l58BLOrt0cvR6IUhSepbnv35GcDCHoxGLw5JUt/y7Gdxef/z3r61
        SpJ0eHnmu/ufP9rjNwNKkg7LN//x//LWqtei0QtFktSnPOvdssrr/Hs0erFIkvqUZz28Tn615Z7urpYk
        Xa084311OkP3RqMXjSRp/+UZDzf0VDR64UiS9lue7XBT7478g0BJ6lOe6Xm2wy3dH41eRJKk/ZVnOlza
        d6PRC0mStJ/yLIcrye+IfiEavaAkSfOXZ7jv++cgH4h+F41eWJKkecuzO89wONinotGLS5I0b3l2w2Zf
        jkYvMEnSfOWZDUfzjWj0QpMkzVOe1XBUt0VPRKMXnCSpvjyj86yGo8vvkH4mGr3wJEl15dnse/45qXyB
        +ZMASZqnPJN9+HMW+UdMj0ajF6Ik6XzlWeyP/Tm7B6PRC1KSdPryDIYyn4x8WZAkna88c/PshXL5bVO+
        NliSTl+etb7hj6m8I/peNHrBSpK2l2dsnrUwpQcifyUgSccrz9Q8W2F6742ejkYvZEnS5cuzNM9U2JWP
        RS9Goxe1JOnG5dmZZyjsVt5F/bXo99HoRS5J+kt5VuaZ6R5/2nhX9PXIvw+QpDeWZ2OekXlWQkt3RQ9F
        r0ajN4EkrVSehXkm5tkIS7gj+lz0fDR6U0hS5/LsyzMwz0JYVn6pRf6d12+i0RtFkjqUZ1yedb7IB65z
        e3RP9EjkTwYkdSjPsjzT8mzLMw64hPw7sfw1mMein0d+k0DSzOUZlWdVnll5dvl7fTiSXM/vie6OPhP9
        Z/RU9Gz0XPTLKP+I7bVo9OaUpEPKMyXPljxj8qzJMyfPnjyD8izKMynPJv8Lfzfe9Kb/A2+nhSBph2lu
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>